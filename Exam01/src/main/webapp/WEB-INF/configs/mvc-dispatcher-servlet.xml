<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">



	<!-- 激活@Required @Autowired,JSR250`s @PostConstruct,@PreDestroy and Resource 
		等标注 -->
	<context:annotation-config />



	<!-- DispatcherServlet上下文，只搜索@Controller标注的类 不搜索其他标注的类 -->
	<context:component-scan base-package="com.hand.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>



	<!-- Handlermapping无需配置，Spring MVC可以默认启动。 DefaultAnnotationHandlerMapping 
		annotation-driven HandlerMapping -->
	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 handlerMapping -->
	<mvc:annotation-driven />



	<!-- 静态资源处理，css js imgs -->
	<mvc:resources location="/resources/" mapping="/resources/**" />



	<!-- 配置ViewResolver. 可以用多个ViewResolver.使用order属性排序。 InternalResourceViewResolver放在最后 -->
<!-- 	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="defaultViews">
			<list>
				<bean	class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"></bean>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
							<property name="classesToBeBound">
								<list>
									<value>com.hand.model.Course</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean> -->

	<!-- 上面没匹配到则会使用这个视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsps/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>